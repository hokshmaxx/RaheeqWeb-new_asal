name: Deploy Laravel Sail with phpMyAdmin

on:
  push:
    branches: [master]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy and Start Sail
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'ENDSSH'
          #!/bin/bash
          set -ex

          # 1. Install dependencies
          sudo dnf update -y
          sudo dnf install -y git docker docker-compose-plugin
          sudo systemctl enable --now docker
          sudo usermod -aG docker $USER
          newgrp docker <<< $(groups)

          # 2. Clone/update repo
          [ ! -d ~/app ] && git clone ${{ github.repository_url }} ~/app
          cd ~/app
          git pull origin master

          # 3. Ensure proper permissions
          sudo chown -R $USER:www-data storage bootstrap/cache
          sudo chmod -R 775 storage bootstrap/cache

          # 4. Start Sail (with force-recreate to ensure clean state)
          ./vendor/bin/sail down || true
          ./vendor/bin/sail up -d --build --force-recreate

          # 5. Verify Sail is running
          if ! ./vendor/bin/sail ps | grep -q 'Up'; then
            echo "::error::Sail containers failed to start!"
            ./vendor/bin/sail logs
            exit 1
          fi

          # 6. Run migrations
          ./vendor/bin/sail artisan migrate --force
          ./vendor/bin/sail artisan optimize:clear

          echo "Sail is now running!"
          echo "Application: http://${{ secrets.EC2_HOST }}"
          echo "phpMyAdmin: http://${{ secrets.EC2_HOST }}:8081"
          ENDSSH
