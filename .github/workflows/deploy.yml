name: Deploy Laravel App to EC2 (No Docker)

on:
  push:
    branches: [master]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          sed -i 's/\\n/\n/g' ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        run: |
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          set -ex

          DOMAIN="raheeq.app"
          EMAIL="hokshmax1@gmail.com"
          APP_DIR="/var/www/html/raheeq"
          PHPMYADMIN_DIR="/usr/share/phpmyadmin"
          PHPMYADMIN_ALIAS="/phpmyadmin"

          # 1. Update and install required packages
          sudo apt-get update
          sudo apt-get install -y nginx php-fpm php-mysql php-cli php-mbstring php-xml php-curl php-gd php-zip unzip git wget mariadb-server

          # 2. Install phpMyAdmin
          sudo apt-get install -y phpmyadmin
          sudo ln -s $PHPMYADMIN_DIR $APP_DIR/public$PHPMYADMIN_ALIAS

          # 3. Secure phpMyAdmin (optional but recommended)
          sudo tee $APP_DIR/public$PHPMYADMIN_ALIAS/.htaccess > /dev/null <<HTACCESS
          AuthType Basic
          AuthName "Restricted Access"
          AuthUserFile /etc/phpmyadmin/.htpasswd
          Require valid-user
          HTACCESS

          # Create password file (change 'admin' and 'password' to your credentials)
          echo "admin:$(openssl passwd -apr1 password)" | sudo tee /etc/phpmyadmin/.htpasswd

          # 4. Install Composer
          EXPECTED_CHECKSUM="$(wget -q -O - https://composer.github.io/installer.sig)"
          php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
          ACTUAL_CHECKSUM="$(php -r "echo hash_file('sha384', 'composer-setup.php');")"
          if [ "$EXPECTED_CHECKSUM" != "$ACTUAL_CHECKSUM" ]; then
              >&2 echo 'ERROR: Invalid installer checksum'
              rm composer-setup.php
              exit 1
          fi
          sudo php composer-setup.php --install-dir=/usr/local/bin --filename=composer
          rm composer-setup.php

          # 5. Setup MySQL
          sudo mysql -u root <<EOSQL || true
          CREATE DATABASE IF NOT EXISTS laravel CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
          CREATE USER IF NOT EXISTS 'laraveluser'@'localhost' IDENTIFIED BY 'securepassword';
          GRANT ALL PRIVILEGES ON laravel.* TO 'laraveluser'@'localhost';
          FLUSH PRIVILEGES;
          EOSQL

          # 6. Install Certbot for SSL
          sudo apt-get install -y certbot python3-certbot-nginx

          # 7. Clone or update Laravel app
          if [ ! -d "$APP_DIR" ]; then
            sudo git clone https://github.com/hokshmaxx/RaheeqWeb-new_asal.git $APP_DIR
            sudo chown -R $USER:$USER $APP_DIR
            cd $APP_DIR
            cp .env.example .env
          else
            cd $APP_DIR
            git fetch origin
            git reset --hard origin/master
          fi

          # 8. Update .env for database connection
          cd $APP_DIR
          sed -i 's/DB_HOST=mysql/DB_HOST=127.0.0.1/' .env
          sed -i 's/DB_USERNAME=root/DB_USERNAME=laraveluser/' .env
          sed -i 's/DB_PASSWORD=/DB_PASSWORD=securepassword/' .env

          # 9. Install composer dependencies
          composer install --no-interaction --prefer-dist --optimize-autoloader --ignore-platform-req=ext-gd || \
          composer install --no-interaction --prefer-dist --optimize-autoloader

          php artisan key:generate
          php artisan migrate --force
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache

          # 10. Set permissions
          sudo chown -R www-data:www-data $APP_DIR
          sudo chmod -R 755 $APP_DIR/storage $APP_DIR/bootstrap/cache

          # 11. Configure Nginx
          sudo tee /etc/nginx/sites-available/laravel.conf > /dev/null <<EOL
          server {
            listen 80;
            server_name $DOMAIN;

            root $APP_DIR/public;
            index index.php index.html;

            location / {
              try_files \$uri \$uri/ /index.php?\$query_string;
            }

            location ~ \.php\$ {
              include snippets/fastcgi-php.conf;
              fastcgi_pass unix:/run/php/php-fpm.sock;
            }

            location ~ /\.ht {
              deny all;
            }

            location $PHPMYADMIN_ALIAS {
              alias $PHPMYADMIN_DIR;
              index index.php;

              location ~ ^$PHPMYADMIN_ALIAS/(.+\.php)\$ {
                alias $PHPMYADMIN_DIR/\$1;
                include snippets/fastcgi-php.conf;
                fastcgi_pass unix:/run/php/php-fpm.sock;
              }

              location ~* ^$PHPMYADMIN_ALIAS/(.+\.(jpg|jpeg|gif|css|png|js|ico|html|xml|txt))\$ {
                alias $PHPMYADMIN_DIR/\$1;
              }
            }
          }
          EOL

          sudo ln -s /etc/nginx/sites-available/laravel.conf /etc/nginx/sites-enabled/
          sudo rm /etc/nginx/sites-enabled/default

          # 12. Test and reload Nginx
          sudo nginx -t
          sudo systemctl reload nginx

          # 13. Obtain SSL certificate
          sudo certbot --nginx --non-interactive --agree-tos -m $EMAIL -d $DOMAIN || true

          # 14. Configure PHP-FPM
          sudo sed -i 's/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/' /etc/php/*/fpm/php.ini
          sudo systemctl restart php-fpm

          echo "âœ… Deployment complete"
          echo "Application available at https://$DOMAIN"
          echo "phpMyAdmin available at https://$DOMAIN$PHPMYADMIN_ALIAS"
          echo "Username: admin"
          echo "Password: password"
          EOF
